{"version":3,"sources":["reducers/reducer.js","store.js","sounds/bells.mp3","components/timer.js","components/session-control.js","components/break-control.js","index.js"],"names":["initialState","session","working","breakLength","timeLeft","running","beeping","START","STOP","TICK","RESET","SESSION_INCREMENT","SESSION_DECREMENT","BREAK_INCREMENT","BREAK_DECREMENT","appReducer","state","action","type","Object","assign","Math","min","max","store","createStore","reducer","applyMiddleware","thunk","Timer","appState","audio","useRef","currentAudio","current","useEffect","play","timer","setTimeout","dispatch","clearTimeout","padTime","num","toString","padStart","minutes","floor","seconds","id","className","onClick","pause","currentTime","src","beep","ref","SessionControl","BreakControl","App","connect","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.cc857d54.chunk.js","sourcesContent":["\r\nconst initialState = {\r\n    session: 25,\r\n    working: true,\r\n    breakLength: 5,\r\n    timeLeft: 25 * 60,\r\n    running: false,\r\n    beeping: false,\r\n};\r\n\r\nconst START = 'START';\r\nconst STOP = 'STOP';\r\nconst TICK = 'TICK';\r\nconst RESET = 'RESET';\r\n\r\nconst SESSION_INCREMENT = 'SESSION_INCREMENT';\r\nconst SESSION_DECREMENT = 'SESSION_DECREMENT';\r\n\r\nconst BREAK_INCREMENT = 'BREAK_INCREMENT';\r\nconst BREAK_DECREMENT = 'BREAK_DECREMENT';\r\n\r\nconst appReducer = (state = initialState, action) => { \r\n\r\n    switch(action.type) {\r\n\r\n        case START:\r\n            return Object.assign({}, state, {\r\n                running: true,\r\n            });\r\n\r\n        case STOP:\r\n            return Object.assign({}, state, {\r\n                running: false,\r\n            });\r\n\r\n        case TICK:\r\n            if (state.timeLeft === 0) {\r\n                return Object.assign({}, state, {\r\n                    working: !state.working,\r\n                    timeLeft: (state.working ? \r\n                        state.breakLength * 60 : \r\n                        state.session * 60),\r\n                    beeping: true,\r\n                })\r\n            }\r\n            return Object.assign({}, state, {\r\n                timeLeft: state.timeLeft - 1,\r\n            });\r\n\r\n        case SESSION_INCREMENT: {\r\n            const session = Math.min(state.session + 1, 60);\r\n            return Object.assign({}, state, {\r\n                session: session,\r\n                timeLeft: session * 60,\r\n                running: false\r\n            })};\r\n\r\n        case SESSION_DECREMENT: {\r\n            const session = Math.max(state.session - 1, 1);\r\n            return Object.assign({}, state, {\r\n                session: session,\r\n                timeLeft: session * 60,\r\n                running: false\r\n            })};\r\n\r\n        case BREAK_INCREMENT: {\r\n            const breakLength = Math.min(state.breakLength + 1, 60);\r\n            return Object.assign({}, state, {\r\n                breakLength: breakLength,\r\n                timeLeft: state.session * 60,\r\n                running: false\r\n            })};\r\n        case BREAK_DECREMENT: {\r\n            const breakLength = Math.max(state.breakLength - 1, 1);\r\n            return Object.assign({}, state, {\r\n                breakLength: breakLength,\r\n                timeLeft: state.session * 60,\r\n                running: false\r\n            })};\r\n\r\n        case RESET:\r\n            return initialState;\r\n\r\n        default:\r\n            return state;\r\n            \r\n    }\r\n};\r\n\r\nexport default appReducer;\r\n\r\nexport const start = () => ( { type: START } );\r\n\r\nexport const tick = () => ( { type: TICK } );\r\n\r\nexport const stop = () => ( { type: STOP } );\r\n\r\nexport const reset = () => ( { type: RESET } );\r\n\r\nexport const sessionIncrement = () => ( { type: SESSION_INCREMENT } );\r\n\r\nexport const sessionDecrement = () => ( { type: SESSION_DECREMENT } );\r\n\r\nexport const breakIncrement = () => ( { type: BREAK_INCREMENT } );\r\n\r\nexport const breakDecrement = () => ( { type: BREAK_DECREMENT } );","import { createStore, applyMiddleware } from 'redux';\r\nimport reducer from './reducers/reducer';\r\nimport thunk from 'redux-thunk';\r\nconst store = createStore(reducer, applyMiddleware(thunk));\r\n \r\nexport default store;","export default __webpack_public_path__ + \"static/media/bells.e3cd1484.mp3\";","import React, { useEffect, useRef } from 'react';\r\nimport store from './../store.js';\r\nimport { start, stop, tick, reset } from './../reducers/reducer.js'\r\nimport beep from \"./../sounds/bells.mp3\"\r\n\r\n\r\n\r\nexport function Timer({ appState }) {\r\n    //pull audio from render method\r\n    const audio = useRef();\r\n    const currentAudio = audio.current;\r\n\r\n    //play audio if time is 0\r\n    useEffect(() => {\r\n        if (appState.timeLeft === 0) {\r\n            currentAudio.play();\r\n        }\r\n    });\r\n\r\n    //dispatch ticks if timer is running\r\n    useEffect(() => {\r\n        let timer;\r\n        if (appState.running) {\r\n            timer = setTimeout(() => {\r\n                store.dispatch(tick())\r\n            }, 1000);\r\n        } \r\n        return () => clearTimeout(timer);\r\n    })\r\n\r\n    const handleStartStop = () => {\r\n        return (appState.running ? \r\n                store.dispatch(stop()) : \r\n                store.dispatch(start())\r\n        )\r\n    }\r\n\r\n    //stop audio and reset initial state\r\n    const handleReset = () => {\r\n        if (currentAudio) {\r\n            currentAudio.pause();\r\n            currentAudio.currentTime = 0;\r\n        }\r\n        store.dispatch(reset());\r\n    }\r\n\r\n    //format time as mm:ss \r\n    const padTime = (num) => {\r\n        return num.toString().padStart(2, '0')\r\n    }\r\n    const minutes = padTime(Math.floor(appState.timeLeft / 60));\r\n    const seconds = padTime(appState.timeLeft % 60);\r\n\r\n\r\n    return (\r\n\r\n        <div id=\"timer\" className=\"component controls\">\r\n                <div id=\"timer-label\">{appState.working? 'Session' : 'Break'}</div>\r\n                <div id=\"time-left\" className=\"digital-display\">{`\r\n                    ${minutes}:${seconds}`}\r\n                </div>\r\n                <div id=\"timer-controls\">\r\n                    <button \r\n                        id=\"start_stop\"\r\n                        onClick={handleStartStop}\r\n                    >{appState.running ? 'Stop' : 'Start'}</button>\r\n                    <button id=\"reset\" onClick={handleReset}>Reset</button>\r\n                    <audio\r\n                        id=\"beep\"\r\n                        src={beep}\r\n                        ref={audio} \r\n                    ></audio>\r\n                </div>\r\n\r\n        </div>\r\n    )\r\n\r\n\r\n}\r\n","import React from 'react';\r\nimport { sessionIncrement, sessionDecrement } from './../reducers/reducer.js';\r\nimport store from './../store.js';\r\n\r\nexport function SessionControl({ session }) {\r\n\r\n    const incrementSession = () => {\r\n        store.dispatch(sessionIncrement());\r\n    }\r\n\r\n    const decrementSession = () => {\r\n        store.dispatch(sessionDecrement());\r\n    }\r\n\r\n    return (\r\n        <div id=\"session-controls\" className=\"component controls\">\r\n            <p id=\"session-label\">Session Length</p>\r\n            <p id=\"session-length\" className=\"digital-display\">{session}</p>\r\n            <div>\r\n                <button \r\n                    id=\"session-increment\"\r\n                    onClick={incrementSession}\r\n                >\r\n                    Session++\r\n                </button>\r\n                <button \r\n                    id=\"session-decrement\"\r\n                    onClick={decrementSession}\r\n                >\r\n                    Session--\r\n                </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport { breakIncrement, breakDecrement } from './../reducers/reducer.js';\r\nimport store from './../store.js';\r\n\r\nexport function BreakControl({ breakLength }) {\r\n\r\n    const incrementBreak = () => {\r\n        store.dispatch(breakIncrement());\r\n    }\r\n\r\n    const decrementBreak = () => {\r\n        store.dispatch(breakDecrement());\r\n    }\r\n\r\n    return (\r\n        <div id=\"break-controls\" className=\"component controls\">\r\n            <p id=\"break-label\">Break Length</p>\r\n            <p id=\"break-length\" className=\"digital-display\">{breakLength}</p>\r\n            <div>\r\n                <button \r\n                    id=\"break-increment\"\r\n                    onClick={incrementBreak}\r\n                    >\r\n                        Break++\r\n                    </button>\r\n                <button \r\n                    id=\"break-decrement\"\r\n                    onClick={decrementBreak}\r\n                    >\r\n                        Break--\r\n                </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport { Provider } from 'react-redux';\r\nimport { connect } from 'react-redux';\r\nimport { Timer } from './components/timer.js';\r\nimport { SessionControl } from './components/session-control.js';\r\nimport { BreakControl } from './components/break-control.js';\r\nimport store from './store.js'\r\n\r\n\r\nfunction Pomodoro({ appState }) {\r\n\r\n        return (\r\n        \r\n            <div id=\"pomodoro\">\r\n                <div id=\"stem\"></div>\r\n                \r\n                <div id=\"leaf-1\" className=\"leaves\"></div>\r\n                <div id=\"leaf-2\" className=\"leaves\"></div>\r\n                <div id=\"leaf-3\" className=\"leaves\"></div>\r\n                <div id=\"display-grid\">\r\n                <Timer appState={appState}/>\r\n                <SessionControl \r\n                    session={appState.session}\r\n                />\r\n                <BreakControl \r\n                    breakLength={appState.breakLength}\r\n                />\r\n            </div></div>\r\n        \r\n        );\r\n\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    appState: state,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  \r\n});\r\n\r\nconst App = connect(mapStateToProps, mapDispatchToProps)(Pomodoro);\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <App />\r\n    </Provider>,\r\n    document.getElementById('root')\r\n);"],"sourceRoot":""}